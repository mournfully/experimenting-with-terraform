{
  "version": 4,
  "terraform_version": "1.3.6",
  "serial": 513,
  "lineage": "60dc5857-b531-2522-acfb-b5a186acda09",
  "outputs": {},
  "resources": [
    {
      "module": "module.testbench_1",
      "mode": "data",
      "type": "template_file",
      "name": "data_cloudinit",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "80d3355d07e40670be32c17386be8102875777bcbb800cf543f2fd5bf03f49aa",
            "rendered": "#cloud-config\n\n# https://www.digitalocean.com/community/tutorials/how-to-use-cloud-config-for-your-initial-server-setup\n# https://www.digitalocean.com/community/tutorials/an-introduction-to-cloud-config-scripting\n# https://github.com/number5/cloud-init/blob/main/doc/examples/cloud-config.txt\n# https://cloudinit.readthedocs.io/en/latest/topics/debugging.html\n\n# Create a new user\n# Set no password for the new user account\n# Set up SSH access for the new user account\n# Give the new user password-less sudo privileges to make administrative changes\n# Set no password and provide no SSH keys for the root account \nusers:\n  - name: local\n    ssh_authorized_keys:\n      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPXej5WJD2eRn4zjkacmTysTdUXlW25kIV/svu/zv4Il minuramolligoda.dev@gmail.com\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    groups: sudo\n    shell: /bin/bash\n    \n# Restrict root SSH login\n# Explicitly permit our new user\n# Restart ssh to apply changes\nruncmd:\n  - sed -i -e '/^PermitRootLogin/s/^.*$/PermitRootLogin no/' /etc/ssh/sshd_config\n  - sed -i -e '$aAllowUsers local' /etc/ssh/sshd_config\n  - restart ssh\n\n# Update \u0026\u0026 uprade packages\n# Install the following packages\npackage_update: false\npackage_upgrade: false\npackages:\n  - qemu-guest-agent\n  - git\n  - python\n  - wget\n\n#  Setup and run PiCalc server for testing\nruncmd:\n  - cd \"/home/local/\"\n  - git clone \"https://github.com/krebsalad/PiCalcPy.git\"\n  - cd \"PiCalcPy\"\n  - sed -i -e \"/^hostname = socket.gethostname()/s/^.*$/s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)/\" \"picalc_server.py\"\n  - sed -i -e \"/ip_addr = socket.gethostbyname(hostname)/a ip_addr = s.getsockname()[0]\" \"picalc_server.py\"\n  - sed -i -e \"/^ip_addr = socket.gethostbyname(hostname)/s/^.*$/s.connect(('8.8.8.8', 80))/\" \"picalc_server.py\"\n  - python \"install_picalc.py\"\n  - python run.py \"mode=server\" \u0026",
            "template": "#cloud-config\n\n# https://www.digitalocean.com/community/tutorials/how-to-use-cloud-config-for-your-initial-server-setup\n# https://www.digitalocean.com/community/tutorials/an-introduction-to-cloud-config-scripting\n# https://github.com/number5/cloud-init/blob/main/doc/examples/cloud-config.txt\n# https://cloudinit.readthedocs.io/en/latest/topics/debugging.html\n\n# Create a new user\n# Set no password for the new user account\n# Set up SSH access for the new user account\n# Give the new user password-less sudo privileges to make administrative changes\n# Set no password and provide no SSH keys for the root account \nusers:\n  - name: local\n    ssh_authorized_keys:\n      - ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPXej5WJD2eRn4zjkacmTysTdUXlW25kIV/svu/zv4Il minuramolligoda.dev@gmail.com\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    groups: sudo\n    shell: /bin/bash\n    \n# Restrict root SSH login\n# Explicitly permit our new user\n# Restart ssh to apply changes\nruncmd:\n  - sed -i -e '/^PermitRootLogin/s/^.*$/PermitRootLogin no/' /etc/ssh/sshd_config\n  - sed -i -e '$aAllowUsers local' /etc/ssh/sshd_config\n  - restart ssh\n\n# Update \u0026\u0026 uprade packages\n# Install the following packages\npackage_update: false\npackage_upgrade: false\npackages:\n  - qemu-guest-agent\n  - git\n  - python\n  - wget\n\n#  Setup and run PiCalc server for testing\nruncmd:\n  - cd \"/home/local/\"\n  - git clone \"https://github.com/krebsalad/PiCalcPy.git\"\n  - cd \"PiCalcPy\"\n  - sed -i -e \"/^hostname = socket.gethostname()/s/^.*$/s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)/\" \"picalc_server.py\"\n  - sed -i -e \"/ip_addr = socket.gethostbyname(hostname)/a ip_addr = s.getsockname()[0]\" \"picalc_server.py\"\n  - sed -i -e \"/^ip_addr = socket.gethostbyname(hostname)/s/^.*$/s.connect(('8.8.8.8', 80))/\" \"picalc_server.py\"\n  - python \"install_picalc.py\"\n  - python run.py \"mode=server\" \u0026",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    }
  ],
  "check_results": null
}
